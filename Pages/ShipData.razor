@page "/shipdata"
@inject HttpClient Http
<br />
<main class="container" role="main">
  <div class="d-flex align-items-center justify-content-center my-3 text-white bg-dark rounded shadow-sm">
    <h1>Live Ship Status</h1>
  </div>
  <div class="my-3 p-3 bg-white rounded shadow-lg">

    @if (forecasts == null)
    {
      <p><em>Loading...</em></p>
    }
    else
    {
      <div class="d-flex flex-sm-row flex-wrap justify-content-center mb-2">
        <div class="p-5 bd-highlight align-self-center">
          <img src="/img/1-spaceship.jpg" width="400">
        </div>
        <div class="p-5 bd-highlight">
          <table class="table">
            <thead>
              <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
              </tr>
            </thead>
            <tbody>
              @foreach (var forecast in forecasts)
              {
                <tr>
                  <td>@forecast.Date.ToShortDateString()</td>
                  <td>@forecast.TemperatureC</td>
                  <td>@forecast.TemperatureF</td>
                  <td>@forecast.Summary</td>
                </tr>
              }
            </tbody>
          </table>
        </div>
      </div>
      <div class="d-flex flex-sm-row flex-wrap justify-content-center mb-2">
        <div class="p-2 bd-highlight align-self-center">
          <h3 class="bg-dark text-white rounded">Location Data</h3>
          <table class="table">
            <thead>
              <tr>
                <th>Variable</th>
                <th>Data</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>Location: </td>
                <td></td>
              </tr>
              <tr>
                <td>Velocity:</td>
                <td></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

    }
  </div>





</main>
@code {
  private WeatherForecast[] forecasts;

  protected override async Task OnInitializedAsync()
  {
    forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
  }

  public class WeatherForecast
  {
    public DateTime Date { get; set; }

    public int TemperatureC { get; set; }

    public string Summary { get; set; }

    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
  }
}
